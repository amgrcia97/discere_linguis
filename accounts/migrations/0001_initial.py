# Generated by Django 4.0.6 on 2022-07-23 17:24

import accounts.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('addresses', '0001_initial'),
        ('languages', '0001_initial'),
        ('profiles', '0001_initial'),
        ('genders', '0001_initial'),
        ('countries', '0001_initial'),
        ('professions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('nick_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Nickname')),
                ('date_joined', models.DateTimeField(verbose_name='Date Joined')),
                ('date_updated', models.DateTimeField(verbose_name='Date Changed')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Deleted')], default=1, verbose_name='Status')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is_superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('description', models.CharField(max_length=120, verbose_name='Description')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Deleted')], default=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'AgeGroup',
                'verbose_name_plural': 'AgeGroups',
                'db_table': 'age_groups',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=126, verbose_name='Phone')),
            ],
            options={
                'verbose_name': 'Phone',
                'verbose_name_plural': 'Phones',
                'db_table': 'phones',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='User Type')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Deleted')], default=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'User Type',
                'verbose_name_plural': 'User Types',
                'db_table': 'user_types',
            },
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_image', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('image', models.CharField(max_length=1024, verbose_name='Imagem')),
            ],
            options={
                'verbose_name': 'User Image',
                'verbose_name_plural': 'Users Images',
                'db_table': 'users_images',
            },
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_data', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birthday', models.DateField(null=True, verbose_name='Data de nascimento')),
                ('document', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Documento')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to='addresses.address')),
                ('age_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_age_group', to='accounts.agegroup')),
                ('born_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_born_country', to='countries.country')),
                ('born_language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_born_language', to='languages.language')),
                ('gender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_gender', to='genders.gender')),
                ('interest_languages', models.ManyToManyField(related_name='interest_languages', to='languages.countrylanguage')),
                ('phone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_phone', to='accounts.phone')),
                ('profession', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profession', to='professions.profession')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to='profiles.profile')),
                ('user_type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_type', to='accounts.usertype')),
            ],
            options={
                'verbose_name': 'User Data',
                'verbose_name_plural': 'Users data',
                'db_table': 'users_data',
            },
        ),
    ]
